// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GitVersion.AcceptanceTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Simplified full scenario")]
    public partial class SimplifiedFullScenarioFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SimplifiedFullScenario.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Simplified full scenario", "\tIn order to verify the impact of GitVersion\r\n\tAs a developper\r\n\tI want to test f" +
                    "ull scenarios", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01 - One versioned release branch")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void _01_OneVersionedReleaseBranch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - One versioned release branch", null, new string[] {
                        "mytag"});
#line 7
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 testRunner.Given("GitVersion configured and a master branch at version (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "IDX",
                        "SHA",
                        "BRANCH",
                        "ACTION",
                        "MERGE_SOURCE",
                        "MESSAGE"});
            table1.AddRow(new string[] {
                        "0",
                        "300e86576",
                        "release/1.14",
                        "B",
                        "master",
                        ""});
            table1.AddRow(new string[] {
                        "1",
                        "5884caf6c",
                        "release/1.14",
                        "C",
                        "",
                        ""});
#line 9
 testRunner.When("I have the following events", ((string)(null)), table1, "When ");
#line 13
    testRunner.Then("The version should be (\"1.14.0-release.1\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02 - One versioned release branch with a feature branch")]
        public virtual void _02_OneVersionedReleaseBranchWithAFeatureBranch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - One versioned release branch with a feature branch", null, ((string[])(null)));
#line 16
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 17
 testRunner.Given("GitVersion configured and a master branch at version (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "IDX",
                        "SHA",
                        "BRANCH",
                        "ACTION",
                        "MERGE_SOURCE",
                        "MESSAGE"});
            table2.AddRow(new string[] {
                        "0",
                        "300e86576",
                        "release/1.14",
                        "B",
                        "master",
                        ""});
            table2.AddRow(new string[] {
                        "1",
                        "5884caf6c",
                        "release/1.14",
                        "C",
                        "",
                        ""});
            table2.AddRow(new string[] {
                        "2",
                        "bf6dbbd68",
                        "feature/homepage",
                        "B",
                        "release/1.14",
                        ""});
#line 18
 testRunner.When("I have the following events", ((string)(null)), table2, "When ");
#line 23
    testRunner.Then("The version should be (\"1.13.0-feature.homepage.1\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03 - One versioned release branch and a feature branch no commit")]
        public virtual void _03_OneVersionedReleaseBranchAndAFeatureBranchNoCommit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - One versioned release branch and a feature branch no commit", null, ((string[])(null)));
#line 25
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 26
 testRunner.Given("GitVersion configured and a master branch at version (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "IDX",
                        "SHA",
                        "BRANCH",
                        "ACTION",
                        "MERGE_SOURCE",
                        "MESSAGE"});
            table3.AddRow(new string[] {
                        "0",
                        "300e86576",
                        "release/1.14",
                        "B",
                        "master",
                        ""});
            table3.AddRow(new string[] {
                        "1",
                        "bf6dbbd68",
                        "feature/homepage",
                        "B",
                        "release/1.14",
                        ""});
#line 27
 testRunner.When("I have the following events", ((string)(null)), table3, "When ");
#line 31
    testRunner.Then("The version should be (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04 - One versioned release branch with a feature branch plus a commit")]
        public virtual void _04_OneVersionedReleaseBranchWithAFeatureBranchPlusACommit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 - One versioned release branch with a feature branch plus a commit", null, ((string[])(null)));
#line 33
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 34
 testRunner.Given("GitVersion configured and a master branch at version (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "IDX",
                        "SHA",
                        "BRANCH",
                        "ACTION",
                        "MERGE_SOURCE",
                        "MESSAGE"});
            table4.AddRow(new string[] {
                        "0",
                        "300e86576",
                        "release/1.14",
                        "B",
                        "master",
                        ""});
            table4.AddRow(new string[] {
                        "1",
                        "5884caf6c",
                        "release/1.14",
                        "C",
                        "",
                        ""});
            table4.AddRow(new string[] {
                        "2",
                        "bf6dbbd68",
                        "feature/homepage",
                        "B",
                        "release/1.14",
                        ""});
            table4.AddRow(new string[] {
                        "3",
                        "be24f9508",
                        "feature/homepage",
                        "C",
                        "",
                        ""});
#line 35
 testRunner.When("I have the following events", ((string)(null)), table4, "When ");
#line 41
    testRunner.Then("The version should be (\"1.14.0-feature.homepage.1\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05 - One versioned release branch with a feature branch a commit and merge")]
        public virtual void _05_OneVersionedReleaseBranchWithAFeatureBranchACommitAndMerge()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 - One versioned release branch with a feature branch a commit and merge", null, ((string[])(null)));
#line 43
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 44
 testRunner.Given("GitVersion configured and a master branch at version (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "IDX",
                        "SHA",
                        "BRANCH",
                        "ACTION",
                        "MERGE_SOURCE",
                        "MESSAGE"});
            table5.AddRow(new string[] {
                        "0",
                        "300e86576",
                        "release/1.14",
                        "B",
                        "master",
                        ""});
            table5.AddRow(new string[] {
                        "1",
                        "5884caf6c",
                        "release/1.14",
                        "C",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "2",
                        "bf6dbbd68",
                        "feature/homepage",
                        "B",
                        "release/1.14",
                        ""});
            table5.AddRow(new string[] {
                        "3",
                        "be24f9508",
                        "feature/homepage",
                        "C",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "4",
                        "dedd43461",
                        "release/1.14",
                        "M",
                        "feature/homePage",
                        ""});
#line 45
 testRunner.When("I have the following events", ((string)(null)), table5, "When ");
#line 52
    testRunner.Then("The version should be (\"1.14.0-release.1\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("06 - One versioned release branch with a feature branch a commit and merge back t" +
            "o master")]
        public virtual void _06_OneVersionedReleaseBranchWithAFeatureBranchACommitAndMergeBackToMaster()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06 - One versioned release branch with a feature branch a commit and merge back t" +
                    "o master", null, ((string[])(null)));
#line 54
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 55
 testRunner.Given("GitVersion configured and a master branch at version (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "IDX",
                        "SHA",
                        "BRANCH",
                        "ACTION",
                        "MERGE_SOURCE",
                        "MESSAGE"});
            table6.AddRow(new string[] {
                        "0",
                        "300e86576",
                        "release/1.14",
                        "B",
                        "master",
                        ""});
            table6.AddRow(new string[] {
                        "1",
                        "5884caf6c",
                        "release/1.14",
                        "C",
                        "",
                        ""});
            table6.AddRow(new string[] {
                        "2",
                        "bf6dbbd68",
                        "feature/homepage",
                        "B",
                        "release/1.14",
                        ""});
            table6.AddRow(new string[] {
                        "3",
                        "be24f9508",
                        "feature/homepage",
                        "C",
                        "",
                        ""});
            table6.AddRow(new string[] {
                        "4",
                        "dedd43461",
                        "release/1.14",
                        "M",
                        "feature/homePage",
                        ""});
            table6.AddRow(new string[] {
                        "5",
                        "4f76edb18",
                        "master",
                        "M",
                        "release/1.14",
                        ""});
#line 56
 testRunner.When("I have the following events", ((string)(null)), table6, "When ");
#line 64
    testRunner.Then("The version should be (\"1.14.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("07 - Start a new release after master merge")]
        public virtual void _07_StartANewReleaseAfterMasterMerge()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07 - Start a new release after master merge", null, ((string[])(null)));
#line 66
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 67
 testRunner.Given("GitVersion configured and a master branch at version (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "IDX",
                        "SHA",
                        "BRANCH",
                        "ACTION",
                        "MERGE_SOURCE",
                        "MESSAGE"});
            table7.AddRow(new string[] {
                        "0",
                        "300e86576",
                        "release/1.14",
                        "B",
                        "master",
                        ""});
            table7.AddRow(new string[] {
                        "1",
                        "5884caf6c",
                        "release/1.14",
                        "C",
                        "",
                        ""});
            table7.AddRow(new string[] {
                        "2",
                        "bf6dbbd68",
                        "feature/homepage",
                        "B",
                        "release/1.14",
                        ""});
            table7.AddRow(new string[] {
                        "3",
                        "be24f9508",
                        "feature/homepage",
                        "C",
                        "",
                        ""});
            table7.AddRow(new string[] {
                        "4",
                        "dedd43461",
                        "release/1.14",
                        "M",
                        "feature/homePage",
                        ""});
            table7.AddRow(new string[] {
                        "5",
                        "4f76edb18",
                        "master",
                        "M",
                        "release/1.14",
                        ""});
            table7.AddRow(new string[] {
                        "6",
                        "74810224b",
                        "release/1.15",
                        "B",
                        "master",
                        ""});
            table7.AddRow(new string[] {
                        "7",
                        "5963b7b2b",
                        "feature/loginpage",
                        "B",
                        "release/1.14",
                        ""});
            table7.AddRow(new string[] {
                        "8",
                        "969fbd708",
                        "feature/loginpage",
                        "C",
                        "",
                        ""});
#line 68
 testRunner.When("I have the following events", ((string)(null)), table7, "When ");
#line 80
    testRunner.Then("The version should be (\"1.15.0-feature.loginpage.1\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("08 - One named release branch with a feature branch a commit and merge back to ma" +
            "ster")]
        public virtual void _08_OneNamedReleaseBranchWithAFeatureBranchACommitAndMergeBackToMaster()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08 - One named release branch with a feature branch a commit and merge back to ma" +
                    "ster", null, ((string[])(null)));
#line 82
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 83
 testRunner.Given("GitVersion configured and a master branch at version (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "IDX",
                        "SHA",
                        "BRANCH",
                        "ACTION",
                        "MERGE_SOURCE",
                        "MESSAGE"});
            table8.AddRow(new string[] {
                        "0",
                        "300e86576",
                        "release/promo",
                        "B",
                        "master",
                        ""});
            table8.AddRow(new string[] {
                        "1",
                        "5884caf6c",
                        "release/promo",
                        "C",
                        "",
                        ""});
            table8.AddRow(new string[] {
                        "2",
                        "bf6dbbd68",
                        "feature/homepage",
                        "B",
                        "release/promo",
                        ""});
            table8.AddRow(new string[] {
                        "3",
                        "be24f9508",
                        "feature/homepage",
                        "C",
                        "",
                        ""});
            table8.AddRow(new string[] {
                        "4",
                        "dedd43461",
                        "release/promo",
                        "M",
                        "feature/homePage",
                        ""});
            table8.AddRow(new string[] {
                        "5",
                        "5963b7b2b",
                        "release/promo",
                        "T",
                        "v1.14.0-RTM",
                        ""});
            table8.AddRow(new string[] {
                        "6",
                        "4f76edb18",
                        "master",
                        "M",
                        "release/promo",
                        ""});
            table8.AddRow(new string[] {
                        "7",
                        "969fbd708",
                        "master",
                        "T",
                        "v1.14.0",
                        ""});
#line 84
 testRunner.When("I have the following events", ((string)(null)), table8, "When ");
#line 94
    testRunner.Then("The version should be (\"1.14.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("09 - Hotfix and merge back to master")]
        public virtual void _09_HotfixAndMergeBackToMaster()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09 - Hotfix and merge back to master", null, ((string[])(null)));
#line 96
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 97
 testRunner.Given("GitVersion configured and a master branch at version (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "IDX",
                        "SHA",
                        "BRANCH",
                        "ACTION",
                        "MERGE_SOURCE",
                        "MESSAGE"});
            table9.AddRow(new string[] {
                        "0",
                        "300e86576",
                        "hotfix/bug1234",
                        "B",
                        "master",
                        ""});
            table9.AddRow(new string[] {
                        "1",
                        "5884caf6c",
                        "hotfix/bug1234",
                        "C",
                        "",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "bf6dbbd68",
                        "master",
                        "M",
                        "hotfix/bug1234",
                        ""});
#line 98
 testRunner.When("I have the following events", ((string)(null)), table9, "When ");
#line 103
    testRunner.Then("The version should be (\"1.13.1\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("10 - Two named release branch merged in one and merge back to master")]
        public virtual void _10_TwoNamedReleaseBranchMergedInOneAndMergeBackToMaster()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10 - Two named release branch merged in one and merge back to master", null, ((string[])(null)));
#line 105
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 106
 testRunner.Given("GitVersion configured and a master branch at version (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "IDX",
                        "SHA",
                        "BRANCH",
                        "ACTION",
                        "MERGE_SOURCE",
                        "MESSAGE"});
            table10.AddRow(new string[] {
                        "0",
                        "300e86576",
                        "release/promo",
                        "B",
                        "master",
                        ""});
            table10.AddRow(new string[] {
                        "1",
                        "db089c66d",
                        "release/promo",
                        "C",
                        "",
                        ""});
            table10.AddRow(new string[] {
                        "2",
                        "5884caf6c",
                        "feature/homepage",
                        "B",
                        "release/promo",
                        ""});
            table10.AddRow(new string[] {
                        "3",
                        "be24f9508",
                        "feature/homepage",
                        "C",
                        "",
                        ""});
            table10.AddRow(new string[] {
                        "4",
                        "dedd43461",
                        "release/concours",
                        "B",
                        "master",
                        ""});
            table10.AddRow(new string[] {
                        "5",
                        "4f76edb18",
                        "feature/concours",
                        "B",
                        "release/concours",
                        ""});
            table10.AddRow(new string[] {
                        "6",
                        "74810224b",
                        "feature/concours",
                        "C",
                        "",
                        ""});
            table10.AddRow(new string[] {
                        "7",
                        "5963b7b2b",
                        "release/promo",
                        "M",
                        "feature/homePage",
                        ""});
            table10.AddRow(new string[] {
                        "8",
                        "969fbd708",
                        "release/concours",
                        "M",
                        "feature/concours",
                        ""});
            table10.AddRow(new string[] {
                        "9",
                        "529047b7a",
                        "release/1.14",
                        "B",
                        "master",
                        ""});
            table10.AddRow(new string[] {
                        "10",
                        "5e7215e0f",
                        "release/1.14",
                        "M",
                        "release/promo",
                        ""});
            table10.AddRow(new string[] {
                        "11",
                        "75e8cdbcf",
                        "release/1.14",
                        "M",
                        "release/concours",
                        ""});
            table10.AddRow(new string[] {
                        "12",
                        "4c231dde6",
                        "master",
                        "M",
                        "release/1.14",
                        ""});
#line 107
 testRunner.When("I have the following events", ((string)(null)), table10, "When ");
#line 122
    testRunner.Then("The version should be (\"1.14.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("11 - One named release branch with a feature branch a commit and merge back to ma" +
            "ster automatic branch creation")]
        public virtual void _11_OneNamedReleaseBranchWithAFeatureBranchACommitAndMergeBackToMasterAutomaticBranchCreation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11 - One named release branch with a feature branch a commit and merge back to ma" +
                    "ster automatic branch creation", null, ((string[])(null)));
#line 124
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 125
 testRunner.Given("GitVersion configured and a master branch at version (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "IDX",
                        "SHA",
                        "BRANCH",
                        "ACTION",
                        "MERGE_SOURCE",
                        "MESSAGE"});
            table11.AddRow(new string[] {
                        "0",
                        "300e86576",
                        "release/promo",
                        "C",
                        "master",
                        ""});
            table11.AddRow(new string[] {
                        "1",
                        "be24f9508",
                        "feature/homepage",
                        "C",
                        "release/promo",
                        ""});
            table11.AddRow(new string[] {
                        "2",
                        "dedd43461",
                        "release/promo",
                        "M",
                        "feature/homePage",
                        ""});
            table11.AddRow(new string[] {
                        "3",
                        "5963b7b2b",
                        "release/promo",
                        "T",
                        "v1.14.0-RTM",
                        ""});
            table11.AddRow(new string[] {
                        "4",
                        "4f76edb18",
                        "master",
                        "M",
                        "release/promo",
                        ""});
            table11.AddRow(new string[] {
                        "5",
                        "969fbd708",
                        "master",
                        "T",
                        "v1.14.0",
                        ""});
#line 126
 testRunner.When("I have the following events", ((string)(null)), table11, "When ");
#line 134
    testRunner.Then("The version should be (\"1.14.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("12 - HotFix and merge back named branch")]
        public virtual void _12_HotFixAndMergeBackNamedBranch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("12 - HotFix and merge back named branch", null, ((string[])(null)));
#line 136
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 137
 testRunner.Given("GitVersion configured and a master branch at version (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "IDX",
                        "SHA",
                        "BRANCH",
                        "ACTION",
                        "MERGE_SOURCE",
                        "MESSAGE"});
            table12.AddRow(new string[] {
                        "0",
                        "300e86576",
                        "release/promo",
                        "B",
                        "master",
                        ""});
            table12.AddRow(new string[] {
                        "1",
                        "db089c66d",
                        "release/promo",
                        "C",
                        "",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "5884caf6c",
                        "feature/homepage",
                        "B",
                        "release/promo",
                        ""});
            table12.AddRow(new string[] {
                        "3",
                        "be24f9508",
                        "feature/homepage",
                        "C",
                        "",
                        ""});
            table12.AddRow(new string[] {
                        "4",
                        "dedd43461",
                        "release/promo",
                        "M",
                        "feature/homePage",
                        ""});
            table12.AddRow(new string[] {
                        "5",
                        "4f76edb18",
                        "hotfix/crash",
                        "B",
                        "master",
                        ""});
            table12.AddRow(new string[] {
                        "6",
                        "74810224b",
                        "hotfix/crash",
                        "C",
                        "",
                        ""});
            table12.AddRow(new string[] {
                        "7",
                        "5963b7b2b",
                        "master",
                        "M",
                        "hotfix/crash",
                        ""});
            table12.AddRow(new string[] {
                        "8",
                        "5963b7b2b",
                        "master",
                        "T",
                        "v1.13.1",
                        ""});
            table12.AddRow(new string[] {
                        "9",
                        "969fbd708",
                        "release/promo",
                        "M",
                        "master",
                        ""});
            table12.AddRow(new string[] {
                        "10",
                        "529047b7a",
                        "master",
                        "M",
                        "release/promo",
                        ""});
#line 138
 testRunner.When("I have the following events", ((string)(null)), table12, "When ");
#line 151
    testRunner.Then("The version should be (\"1.13.1\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("13 - HotFix and merge back versioned branch")]
        public virtual void _13_HotFixAndMergeBackVersionedBranch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("13 - HotFix and merge back versioned branch", null, ((string[])(null)));
#line 153
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 154
 testRunner.Given("GitVersion configured and a master branch at version (\"1.13.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "IDX",
                        "SHA",
                        "BRANCH",
                        "ACTION",
                        "MERGE_SOURCE",
                        "MESSAGE"});
            table13.AddRow(new string[] {
                        "0",
                        "300e86576",
                        "release/1.14",
                        "B",
                        "master",
                        ""});
            table13.AddRow(new string[] {
                        "1",
                        "db089c66d",
                        "release/1.14",
                        "C",
                        "",
                        ""});
            table13.AddRow(new string[] {
                        "2",
                        "5884caf6c",
                        "feature/homepage",
                        "B",
                        "release/1.14",
                        ""});
            table13.AddRow(new string[] {
                        "3",
                        "be24f9508",
                        "feature/homepage",
                        "C",
                        "",
                        ""});
            table13.AddRow(new string[] {
                        "4",
                        "dedd43461",
                        "release/1.14",
                        "M",
                        "feature/homePage",
                        ""});
            table13.AddRow(new string[] {
                        "5",
                        "4f76edb18",
                        "hotfix/crash",
                        "B",
                        "master",
                        ""});
            table13.AddRow(new string[] {
                        "6",
                        "74810224b",
                        "hotfix/crash",
                        "C",
                        "",
                        ""});
            table13.AddRow(new string[] {
                        "7",
                        "5963b7b2b",
                        "master",
                        "M",
                        "hotfix/crash",
                        ""});
            table13.AddRow(new string[] {
                        "8",
                        "5963b7b2b",
                        "master",
                        "T",
                        "v1.13.1",
                        ""});
            table13.AddRow(new string[] {
                        "9",
                        "969fbd708",
                        "release/1.14",
                        "M",
                        "master",
                        ""});
            table13.AddRow(new string[] {
                        "10",
                        "529047b7a",
                        "master",
                        "M",
                        "release/1.14",
                        ""});
#line 155
 testRunner.When("I have the following events", ((string)(null)), table13, "When ");
#line 168
    testRunner.Then("The version should be (\"1.14.0\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
